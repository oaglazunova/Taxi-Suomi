.hidden-text {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

.slider-style {
  width: 200px;
  height: 10px;
  margin: 0 0 0 -100px;
  position: absolute;
  left: 50%;
  text-align: center;
}

.slider-hide-radio {
  position: absolute;
  opacity: 0;
}

.slider-style__btn {
  width: 6px;
  height: 6px;
  margin: 0 3px;
  display: inline-block;
  background: grey;
  border: 3px solid transparent;
  vertical-align: top;
  border-radius: 50%;
  cursor: pointer;
  box-sizing: content-box;
  background-clip: padding-box;
  &:hover {
    background: grey;
    background-clip: padding-box;
  }
}

.slider-style__btn--active {
  border: 3px solid @accent--dark;
  background: transparent;
}

// Webkit-style focus
// ------------------
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// IE7 inline-block
// ----------------
.ie7-inline-block() {
  *display: inline;
  /* IE7 inline-block hack */
  
  *zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace() {
  *margin-left: .3em;
  &:first-child {
    *margin-left: 0;
  }
}

.ie7-restore-right-whitespace() {
  *margin-right: .3em;
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}



// FORMS
// --------------------------------------------------
// Block level inputs
.input-block-level (@inputHeight) {
  display: block;
  width: 100%;
  min-height: @inputHeight; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  .box-sizing(border-box); // Makes inputs behave like true block-level elements
}

// Mixin for form field states
.formFieldState(@textColor: #555,
@borderColor: #ccc,
@backgroundColor: #f5f5f5) {
  // Set the text color
  > label, .help-block, .help-inline {
    color: @textColor;
  }
  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea {
    color: @textColor;
  }
  input,
  select,
  textarea {
    border-color: @borderColor;
    .box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075)); // Redeclare so transitions work
    &:focus {
      border-color: darken(@borderColor, 10%);
      @shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px lighten(@borderColor, 20%);
      .box-shadow(@shadow);
    }
  }
  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on {
    color: @textColor;
    background-color: @backgroundColor;
    border-color: @textColor;
  }
}
